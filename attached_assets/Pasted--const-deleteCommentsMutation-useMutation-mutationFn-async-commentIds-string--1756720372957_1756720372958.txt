  const deleteCommentsMutation = useMutation({
    mutationFn: async (commentIds: string[]) => {
      const response = await fetch('/api/comments/delete', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ comment_ids: commentIds })
      });
      if (!response.ok) throw new Error('Failed to delete comments');
      return response.json();
    },
    onSuccess: (data) => {
      toast({
        title: "Comments Deleted",
        description: data.message
      });
      setSelectedComments([]);
      queryClient.invalidateQueries({ queryKey: ['/api/comments'] });
    },
    onError: (error) => {
      toast({
        title: "Error",
        description: error instanceof Error ? error.message : "Failed to delete comments",
        variant: "destructive"
      });
    }
  });




  app.post("/api/comments/delete", async (req, res) => {
    try {
      const { comment_ids } = req.body;
      if (!comment_ids || !Array.isArray(comment_ids)) {
        return res.status(400).json({ message: "comment_ids array is required" });
      }
      const result = await storage.deleteComments(comment_ids);
      res.json(result);
    } catch (error) {
      res.status(500).json({ 
        message: error instanceof Error ? error.message : "Failed to delete comments" 
      });
    }
  });




  private readonly SITE_URL = process.env.WORDPRESS_URL || 'https://ascollegechincholi.com';
  private readonly API_KEY = process.env.WORDPRESS_API_KEY || '2iG4kjo6CaiyNw3gqWOezusvYSiW22tn';
  private readonly API_BASE = `${this.SITE_URL}/wp-json/aiowebcare/v1`;
  async deleteComments(commentIds: string[]): Promise<{ success: boolean; message: string; deleted_count: number }> {
    const response = await fetch(`${this.API_BASE}/comments/delete`, {
      method: 'POST',
      headers: {
        'X-AIOWebcare-API-Key': this.API_KEY,
        'X-WRM-API-Key': this.API_KEY,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ comment_ids: commentIds }),
    });

    if (!response.ok) {
      throw new Error(`Comment deletion failed: ${response.status} ${response.statusText}`);
    }

    return response.json();
  }